allprojects {
    group = 'com.ninox360'
    version = '1.0-SNAPSHOT'
}

project.ext.boofcv_version = '0.41-SNAPSHOT'
project.ext.junit_version = '5.8.1'
project.ext.lombok_version = '1.18.20'
project.ext.args4j_version = '2.33'

apply plugin: 'java-library'

java {
    withJavadocJar()
    withSourcesJar()
    toolchain { languageVersion = JavaLanguageVersion.of(17) }
}

tasks.withType(JavaCompile).configureEach { options.encoding = "UTF-8" }

repositories {
    mavenCentral()
    mavenLocal()

    maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
}

dependencies {
    api("org.boofcv:boofcv-core:$boofcv_version")
    api("org.boofcv:boofcv-swing:$boofcv_version")
    api("org.boofcv:applications:$boofcv_version")
    api "args4j:args4j:$args4j_version"

    compileOnly "org.projectlombok:lombok:${project.lombok_version}"
    annotationProcessor "org.projectlombok:lombok:${project.lombok_version}"  // @Getter @Setter

    testImplementation("org.junit.jupiter:junit-jupiter-api:$junit_version")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junit_version")
}

// task for creating the main application jar used to detect and verify alignment of labels
task boofcv_sfm(type: Jar) {
    manifest {
        attributes 'Implementation-Title': 'BoofCV SfM',
                'Implementation-Version': project.version,
                'Main-Class': 'ninox360.Main'
    }

    outputs.upToDateWhen { false }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    archiveFile.set(file('boofcv_sfm.jar'))

    from sourceSets.main.output

    dependsOn configurations.runtimeClasspath
    from { configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) } } {
        exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    }
}


wrapper {
    distributionType = Wrapper.DistributionType.BIN
    gradleVersion = '7.3.3'
}
